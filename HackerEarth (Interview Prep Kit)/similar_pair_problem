package Practice;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;
public class similarPairProblem {

	 private static final Scanner scanner = new Scanner(System.in);

	
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		//BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.in));

        String[] nk = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nk[0].trim());

        int k = Integer.parseInt(nk[1].trim());

        int[][] edges = new int[n-1][2];

        for (int edgesRowItr = 0; edgesRowItr < n-1; edgesRowItr++) {
            String[] edgesRowItems = scanner.nextLine().split(" ");

            for (int edgesColumnItr = 0; edgesColumnItr < 2; edgesColumnItr++) 
            {
                int edgesItem = Integer.parseInt(edgesRowItems[edgesColumnItr].trim());
                edges[edgesRowItr][edgesColumnItr] = edgesItem;
            }
        }
	}
	
	 static class pairs
	{
		int x;
		int y;
	}
	
	static int similarPair(int n, int k, int[][] edges) {
        /*
         * Write your code here.
         */
		int num=0;
		ArrayList<pairs> pair1=new ArrayList<pairs>();
		
		for(int i=0;i<n-1;i++)
        {
            int x=edges[i][0];
            int y=edges[i][1];
            
            pairs pr=new pairs();
            
            pr.x=x;
            pr.y=y;
            
            pair1.add(pr);
        }
		
		System.out.println("pair 1");
		for(pairs p:pair1)
			System.out.print(p.x+" "+p.y+",");
        
        ArrayList<pairs> pair2=new ArrayList<pairs>();
        for(pairs p1:pair1)
        {
        	pairs q=p1;
        	
        	for(pairs p2:pair1)
            {
        		if(q.y==p2.x)
        		{
        			pairs pr=new pairs();
        			pr.x=q.x;
        			pr.y=p2.y;
        			
        			pair2.add(pr);
        		}
        		
            }
        }
        
        System.out.println("pair 2");
        for(pairs p:pair2)
			System.out.print(p.x+" "+p.y+",");
        
        for(pairs p:pair1)
        {
            if(Math.abs(p.x-p.y)<=k)
                num++;
        }
        
        for(pairs p:pair2)
        {
            if(Math.abs(p.x-p.y)<=k)
                num++;
        }
        
        return num;

    }

}
