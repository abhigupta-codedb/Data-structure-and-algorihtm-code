package Practice;

public class calShifts {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[]= {2,1,3,1,2};
		int arr2[]= {1,1,1,3,4};
//		int arr2[]= {1,2,3};
		int key=2;
		
		int pos=binarySearch(arr2, 0, arr2.length-1,key);
		
		if(pos!=-1 && arr2[pos+1]==key)
			pos+=1;
		
		System.out.println(pos);
		//System.out.println(insertionSort(arr));
		
	}

	private static int insertionSort(int[] arr) {
		// TODO Auto-generated method stub
		int shifts=0;
		
		
		for(int i=1;i<arr.length;i++)
		{
			int ele=arr[i];
			int j=i-1;
			
			while (j>=0 && arr[j] > ele) 
            { 
                arr[j+1] = arr[j]; 
                j = j-1; 
                shifts++;
            } 
            arr[j+1] = ele;
			
		}
		
		return shifts;
	}
	
	
	static int binarySearch(int arr[],int low,int high,int key)
	{
		if(low>high)
			return low;
		
		int mid=(low+high)/2;
		
		if(arr[mid]==key)
			return mid;
		
		else if(arr[mid]<key)
			low=mid+1;
		
		else if(arr[mid]>key)
			high=mid-1;
		
		return binarySearch(arr, low, high, key);
	}

}
