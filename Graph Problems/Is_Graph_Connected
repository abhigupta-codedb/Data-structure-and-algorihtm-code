package Graphs;
import java.util.*;
public class isConnected {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc =new Scanner(System.in);
		int v=sc.nextInt();
		int e=sc.nextInt();
		
		int graph[][]=new int[v][v];
		
		for(int i=0;i<e;i++)
		{
			int x=sc.nextInt();
			int y=sc.nextInt();
			
			graph[x][y]=1;
			graph[y][x]=1;
		}
		
		int varr[]=new int[v];
		Queue<Integer> q=new LinkedList<Integer>();
		
		traverse(graph,v,0,varr,q);
		
		boolean connc=true;
		
		for(int a:varr)
		{
			if(a==0)
			{
				connc=false;
				break;
			}
		}
		
		if(connc)
			System.out.println(connc);
		else
			System.out.println(connc);
		
		
		
		sc.close();
	}

	private static void traverse(int[][] graph, int v, int sv, int[] varr,Queue<Integer> q) {
		// TODO Auto-generated method stub
		varr[sv]=1;
		
		for(int i=0;i<v;i++)
		{
			if(i==sv)
				continue;
			
			if(graph[sv][i]==1 && varr[i]==0)
			{
				if(!q.contains(i))
					q.add(i);
			}
			
		}
		
		while(!q.isEmpty())
		{
			traverse(graph, v, q.remove(), varr, q);
		}
		
	}

}
