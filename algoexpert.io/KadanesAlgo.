package Practice;
import java.util.ArrayList;
import java.util.HashMap;
public class kadanesAlgo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[]={-1,-2,-3,-4,-5,-6,-7,-8,-9,-10};
		
		System.out.println("Highest Sum ");
		System.out.println(getHighest_Sum_From_SubArray(arr)+"\n");
	
		for(int a:getHighestSum_SubArray(arr))
			System.out.print(a+" ");
	}
	
	static ArrayList<Integer> getHighestSum_SubArray(int array[])
	{
		ArrayList<Integer> maxList=new ArrayList<Integer>();
		int maxSum=Integer.MIN_VALUE;
		
		for(int i=0;i<array.length;i++)
		{
			for(int j=i;j<array.length;j++)
			{
				int sum=0;
				ArrayList<Integer> locList=new ArrayList<Integer>();
				for(int k=i;k<=j;k++)
				{
					sum+=array[k];
					locList.add(array[k]);
				}
				
				if(sum>maxSum)
				{
					maxSum=sum;
					maxList.clear();
					maxList.addAll(locList);
				}
			}
		}
		
		return maxList;
	}
	
	static int getHighest_Sum_From_SubArray(int array[])
	{
		ArrayList<Integer> maxList=new ArrayList<Integer>();
		int maxSum=Integer.MIN_VALUE;
		
		for(int i=0;i<array.length;i++)
		{
			for(int j=i;j<array.length;j++)
			{
				int sum=0;
				ArrayList<Integer> locList=new ArrayList<Integer>();
				for(int k=i;k<=j;k++)
				{
					sum+=array[k];
					locList.add(array[k]);
				}
				
				if(sum>maxSum)
				{
					maxSum=sum;
					maxList.clear();
					maxList.addAll(locList);
				}
			}
		}
		
		return maxSum;
	}

}
