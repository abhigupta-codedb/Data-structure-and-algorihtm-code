
public class maxInStack {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		stack stk=new stack(3);
		stk.push(4);
		stk.push(5);
		stk.push(3);
		System.out.println("max: "+stk.getMax());
		System.out.println("pop: "+stk.pop());
		System.out.println("pop: "+stk.pop());
		System.out.println("max: "+stk.getMax());
		stk.push(1);
		stk.push(2);
		stk.push(6);
		stk.push(7);
		stk.push(8);
		System.out.println("max: "+stk.getMax());
		System.out.println("pop: "+stk.pop());
		System.out.println("pop: "+stk.pop());
		System.out.println("max: "+stk.getMax());
	}
	
	static class stack
	{
		int top;
		int arr[];
		int max[];
		
		
		stack(int size)
		{
			top=0;
			max=new int[size];
			arr=new int[size];
		}
		
		void push(int val)
		{
			
			if(top==this.arr.length)
			{
				// making another array for stack pushing.
				int nwarray[]=new int[this.arr.length*2];
				int k=0;
				for(int var:arr)
					nwarray[k++]=var;
				
				nwarray[k]=val;
				
				//making another array for max elements.
				int nwmax[]=new int[this.max.length*2];
				int j=0;
				for(int a:max)
					nwmax[j++]=a;
				
				if(val>nwmax[j-1])
					nwmax[j]=val;
				else
					nwmax[j]=nwmax[j-1];
				
				top=k;
				
				this.arr=nwarray;
				this.max=nwmax;
			}
			
			else
			{
				arr[top]=val;
				
				if(top==0)
					max[top]=val;
				
				else if(top>0 && val>max[top-1])
					max[top]=val;
				else
					max[top]=max[top-1];
				
				
			}
			
			top++;
			System.out.println("element pushed is: "+val);
		}
		
		
		int pop()
		{
			if(this.top==0)
				return -1;
			
			int val=arr[top-1];
			top--;
			
			return val;
		}
		
		
		int getMax()
		{
			if(top>0)
				return max[top-1];
			
			return Integer.MIN_VALUE;
		}
	}
	

}
