//The Question Link can be found below...
https://leetcode.com/problems/search-in-rotated-sorted-array/

class Solution {
    public int search(int[] nums, int target) {
        
        
            if(nums.length==1) 
			return nums[0]==target?0:-1;
		
		else if(nums.length==2) {
			if(nums[0]==target)
				return 0;
			
			else if(nums[1]==target)
				return 1;
			
			else
				return -1;
		}
		
		else
			return getIndex(nums, 0, nums.length-1, target);
    }
    
    static int getIndex(int arr[],int left,int right,int target) {
		
		if(left>right)
			return -1;
		
		int mid=(left+right)/2;
		
		if(arr[mid]==target)
			return mid;
		
		else if( arr[mid]>=arr[left]) {
			if(target>=arr[left] && target<=arr[mid])
				return getIndex(arr, left, mid-1, target);
			else
				return getIndex(arr, mid+1, right, target);
		}
		
		else
		{
			if(target>arr[mid] && target<=arr[right])
				return getIndex(arr, mid+1, right, target);
			else
				return getIndex(arr, left, mid-1, target);
		}
		
	}
}
