Problem Description:
https://leetcode.com/problems/add-two-numbers-ii/submissions/


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1=reverse(l1);
        l2=reverse(l2);
        
        ListNode out=AddTwoNumbers(l1,l2);
        
        return reverse(out);
    }
    
    static ListNode reverse(ListNode l) {
		ListNode prev=null,next=null,current=l;
		
		while(current!=null) { 
			next=current.next;
			current.next=prev;
			prev=current;
			current=next;
		}
		
		return prev;
	}
    
    static ListNode AddTwoNumbers(ListNode l1,ListNode l2) {
		ListNode head,tail;
        head=new ListNode(-1);
        tail=head;
        
        int carry=0;
        int sum=0;
        
        while(l1!=null && l2!=null){
            sum=l1.val+l2.val+carry;
            carry=0;
            if(sum>=10){
                sum=sum-10;
                carry=1;    
            }
            
            ListNode temp=new ListNode(sum);
           
            if(head.val==-1){
                tail=head=temp;
            }
            
            else
            {
            	tail.next=temp;
            	tail=temp;
            }
            
            l1=l1.next;
            l2=l2.next;
        }
        
        while(l1!=null)
        {
           sum=l1.val+carry;
           carry=0; 
            if(sum>=10){
                sum=sum-10;
                carry=1;    
            }
            
           ListNode temp=new ListNode(sum);
            
            if(head.val==-1){
                tail=head=temp;
            }
            
            else
            {
            	tail.next=temp;
            	tail=temp;
            }
            
            l1=l1.next;
        }
        
        
        while(l2!=null)
        {
           sum=l2.val+carry;
           carry=0; 
            if(sum>=10){
                sum=sum-10;
                carry=1;    
            }
            
           ListNode temp=new ListNode(sum);
            
            if(head.val==-1){
                tail=head=temp;
            }
            
            else
            {
            	tail.next=temp;
            	tail=temp;
            }
            
            l2=l2.next;
        }
        
        if(carry!=0) {
        	ListNode temp=new ListNode(carry);
        	tail.next=temp;
        	tail=temp;
        }
        
        return head;
	}
}
