Problem description:
https://leetcode.com/problems/search-in-rotated-sorted-array-ii/submissions/

class Solution {
    public boolean search(int[] nums, int target) {
        int left=0;
		int right=nums.length-1;
		
		while(left<=right) {
			
			int mid=(left+right)/2;
			
			if(nums[mid]==target)
				return true;
			
			//If we know for sure right side is sorted or left side is unsorted
            if (nums[mid] < nums[right] || nums[mid] < nums[left]) {
                if (target > nums[mid] && target <= nums[right]) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            //If we know for sure left side is sorted or right side is unsorted
            } else if (nums[mid] > nums[left] || nums[mid] > nums[right]) {
                if (target < nums[mid] && target >= nums[left]) {
                    right = mid - 1;
                } else {
                    left = mid + 1;
                }
            } else {
                right--;
            }
		}
		
		return false;    
    }
}
